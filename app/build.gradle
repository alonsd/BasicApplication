apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"



android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    defaultConfig {
        applicationId "com.basicapplication"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 2
        versionName "1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        Developer {
            minifyEnabled false
            debuggable true
            buildConfigField 'String', 'BASE_URL','"https://pastebin.com/"'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        Stage_QA {
            minifyEnabled false
            debuggable true
            buildConfigField 'String', 'BASE_URL','"https://pastebin.com/"'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        Production {
            minifyEnabled false
            debuggable true
            buildConfigField 'String', 'BASE_URL','"https://pastebin.com/"'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    //We don't want to use the default build variants so we ignore them.
    variantFilter { variant ->
        if(variant.buildType.name == 'debug' || variant.buildType.name == 'release') {
            variant.setIgnore(true)
        }
    }

    //When building a new version it will automatically include the build type in the name
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}-${variant.versionName}.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-android-extensions-runtime:1.4.32'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"
    kapt "com.android.databinding:compiler:3.1.4"

    //Ok Http Logging
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    //NetworkResponseAdapter
    implementation 'com.github.haroldadmin:NetworkResponseAdapter:4.2.1'


    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"

    //ViewPager2
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    //Material
    implementation 'com.google.android.material:material:1.4.0-beta01'

    //Fragment
    implementation "androidx.fragment:fragment-ktx:1.3.3"

    //Room components
    implementation 'androidx.room:room-runtime:2.3.0'
    implementation 'androidx.room:room-ktx:2.3.0'
    kapt 'androidx.room:room-compiler:2.3.0'
    kapt "android.arch.persistence.room:compiler:1.1.1"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"

    //Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    //Lifecycle components
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.3.1'

    //Gson
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    //Dependency Injection(Service Locator) - Koin
    implementation 'org.koin:koin-core:2.2.2'
    implementation "org.koin:koin-android-scope:2.2.2"
    implementation "org.koin:koin-android-viewmodel:2.2.2"

}

kapt {
    generateStubs = true
}
